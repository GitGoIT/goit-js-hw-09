{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAIf,SAAdG,EAAcC,EAAUC,GAW/B,OAViB,IAAIC,SAAQ,SAACC,EAASC,GACrCC,YAAW,WACSC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEMG,EAAnB,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAZeN,SAASC,cAAc,yBAqC/Ba,iBAAiB,SAnB3B,SAAuBC,GACjBA,EAAIC,iBAGiC,IAFW,IAA5CC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACvBE,EAAI,EAAGA,EAAIlB,EAAOgB,MAAOE,IAChCjB,EAAc,EAAIiB,EAAGJ,EAAaI,EAAID,GACPE,MAAvB,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALV,MACjBY,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUyB,EAAKP,EAALV,MAClBY,EAAA5B,GAAS6B,OAAOK,QACd,sBAAuCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]') // отримуємо доступ до поля First delay\nconst step = document.querySelector('input[name=\"step\"]') // отримуємо доступ до поля Delay step\nconst amount = document.querySelector('input[name=\"amount\"]') // отримуємо доступ до поля Amount\nconst createBtn = document.querySelector('button[type=\"submit\"]') // отримуємо доступ до кнопки Create promises\n\n\nfunction createPromise(position, delay) {\n   const promise = new Promise((resolve, reject) => {   // рефактиримо функцію, створюємо новий проміс\n    setTimeout(() => {                                  // додаємо таймер\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({ position, delay });                       // доповнюємо статичним методом resolve\n  } else {\n    reject({ position, delay });                        // доповнюємо статичним методом reject\n  }\n}, delay);\n  });\n  return promise;                                        // повертаємо результат\n}\n\n\nfunction onClickCreate(evt) { // функція обробки кліка на кнопку Create promises\n      evt.preventDefault();   // знімаємо перезавантаження сторінки при роботі з формою\n      let firstDelay = Number(delay.value);     //змінна для введеного значення в First delay передана числом\n      let delayStep = Number(step.value);       //змінна для введеного значення в Delay step передана числом\n  for (let i = 0; i < amount.value; i++) {      // перебираємо порядок\n    createPromise(1 + i, firstDelay + i * delayStep) // передаємо аргументи порядку в position та delay\n      .then(({ position, delay }) => {       // виводимо результат обробки\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {     // ловимо помилку та виводимо результат обробки\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n};\n\ncreateBtn.addEventListener('click', onClickCreate); // слухач для кнопки Create promises\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","evt","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.6a59c87f.js.map"}